services:
  mongodb:
    container_name: mongodb_pos
    image: mongo:8.0
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_logs:/var/log/mongodb
      - ./secrets/mongo-keyfile:/run/secrets/mongo-keyfile:ro
      - ./mongo-entrypoint.sh:/usr/local/bin/mongo-entrypoint.sh:ro
    env_file:
      - ../../.env.development
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-password}
    networks:
      - pos_network
    entrypoint: ["/bin/bash","-lc"]
    command: "/usr/local/bin/mongo-entrypoint.sh"
    healthcheck:
      test: >
        mongosh --host localhost:27017
        -u ${MONGODB_ROOT_USERNAME:-admin}
        -p ${MONGODB_ROOT_PASSWORD:-password}
        --authenticationDatabase admin
        --eval "db.adminCommand('ping').ok" --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Init replica set for MongoDB (run once)
  mongodb-init:
    container_name: mongodb_pos_init
    image: mongo:8.0
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./scripts/mongo-init.sh:/usr/local/bin/mongo-init.sh:ro
    env_file:
      - ../../.env.development
    environment:
      - MONGODB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME:-admin}
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-password}
      - MONGODB_REPLICA_SET=${MONGODB_REPLICA_SET:-rs0}
    entrypoint: ["/bin/bash","-lc"]
    command: "/usr/local/bin/mongo-init.sh"
    networks:
      - pos_network
    restart: "no"

  redis:
    container_name: redis_pos
    image: redis:6.2.12
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    env_file:
      - ../../.env.development
    networks:
      - pos_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: minio_pos
    image: minio/minio:latest
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    env_file:
      - ../../.env.development
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    networks:
      - pos_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    profiles:
      - dev-storage

volumes:
  mongodb_data:
  mongodb_logs:
  redis_data:
  minio_data:

networks:
  pos_network:
    driver: bridge